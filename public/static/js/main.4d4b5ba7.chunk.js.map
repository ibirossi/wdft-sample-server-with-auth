{"version":3,"sources":["components/MyNav.js","components/MyChatBot.js","components/MyMap.js","config.js","components/TodoList.js","components/AddForm.js","components/TodoDetail.js","components/EditForm.js","components/SignIn.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["MyNav","props","buttonStyle","marginLeft","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","to","style","loggedInUser","onClick","onLogout","Component","MyMap","API_URL","TodoList","todos","map","todo","_id","name","AddForm","onSubmit","onAdd","type","placeholder","TodoDetail","state","todoId","this","match","params","console","log","axios","get","then","response","setState","data","description","image","width","src","alt","onDelete","EditForm","handleNameChange","e","cloneTodo","JSON","parse","stringify","target","value","handleDescChange","onChange","onEdit","SignIn","useEffect","onUnMount","onSignIn","htmlFor","aria-describedby","errorMessage","color","SignUp","onSignUp","App","handleAdd","preventDefault","imageFile","files","uploadForm","FormData","append","post","newTodo","completed","history","push","handleDelete","delete","filteredTodos","filter","handleEdit","patch","updatedTodos","myTodo","handleSignUp","username","email","password","withCredentials","handleSignIn","catch","err","error","handleLogOut","handleUnMount","exact","path","render","routeProps","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6PAqCeA,MAjCf,SAAeC,GACb,IAAIC,EAAc,CAAEC,WAAY,QAEhC,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,cAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,mBACA,cAAC,IAAD,CAAMC,MAAOZ,EAAaW,GAAG,YAA7B,sBAGCZ,EAAMc,aACL,wBAAQD,MAAOZ,EAAac,QAASf,EAAMgB,SAA3C,oBAIA,qCACG,IACD,cAAC,IAAD,CAAMH,MAAOZ,EAAaW,GAAG,WAA7B,qBAGA,cAAC,IAAD,CAAMC,MAAOZ,EAAaW,GAAG,WAA7B,iC,+BCxBUK,Y,sDCyBTC,IC3BFC,EAAS,kD,MCwCPC,MA/Bf,SAAkBpB,GAKd,OAYI,cARR,CAQQ,gCAGOA,EAAMqB,MAAMC,KAAI,SAACC,GACZ,OAAO,cAAC,IAAD,CAAMX,GAAE,gBAAWW,EAAKC,KAAxB,SACH,4BAAoBD,EAAKE,MAAjBF,EAAKC,cCXtBE,MAjBf,SAAiB1B,GAEb,OAAIA,EAAMc,aAMN,uBAAMa,SAAU3B,EAAM4B,MAAtB,UACI,uBAAOH,KAAK,OAAOI,KAAK,OAAOC,YAAY,eAC3C,uBAAOL,KAAK,cAAeI,KAAK,OAAOC,YAAY,sBACnD,uBAAOD,KAAK,OAAOlB,UAAU,eAAec,KAAK,UACjD,wBAAQI,KAAK,SAAb,uBATG,cAAC,IAAD,CAAUjB,GAAI,cC6CdmB,E,4MA3CbC,MAAQ,CACNT,KAAM,I,kEAGa,IAAD,OACdU,EAASC,KAAKlC,MAAMmC,MAAMC,OAAOH,OACrCI,QAAQC,IAAIJ,KAAKlC,OAEjBuC,IAAMC,IAAN,UAAarB,EAAb,kBAA8Bc,IAAUQ,MAAK,SAACC,GAC5C,EAAKC,SAAS,CACZpB,KAAMmB,EAASE,Y,+BAKX,IAAD,SACmCV,KAAKF,MAAMT,KAA7CE,EADD,EACCA,KAAMoB,EADP,EACOA,YAAarB,EADpB,EACoBA,IAAKsB,EADzB,EACyBA,MAGhC,OAFyBZ,KAAKlC,MAAtBc,aAON,gCACE,yCAAYW,KACZ,2CAAcoB,KACd,qBAAKhC,MAAO,CAAEkC,MAAO,QAAUC,IAAKF,EAAOG,IAAKxB,IAChD,cAAC,IAAD,CAAMb,GAAE,gBAAWY,EAAX,SAAR,SACE,4CAEF,wBACET,QAAS,WACP,EAAKf,MAAMkD,SAAS1B,IAFxB,uBAXK,cAAC,IAAD,CAAUZ,GAAI,iB,GAvBFK,aC6CVkC,E,4MA5CXnB,MAAO,CACHT,KAAM,I,EAaV6B,iBAAmB,SAACC,GACjB,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,UAAU,EAAKzB,MAAMT,OACrD+B,EAAU7B,KAAQ4B,EAAEK,OAAOC,MAC3B,EAAKhB,SAAS,CACVpB,KAAM+B,K,EAIbM,iBAAmB,SAACP,GAChB,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,UAAU,EAAKzB,MAAMT,OACrD+B,EAAUT,YAAeQ,EAAEK,OAAOC,MAClC,EAAKhB,SAAS,CACVpB,KAAM+B,K,kEAtBO,IAAD,OACbrB,EAASC,KAAKlC,MAAMmC,MAAMC,OAAOH,OACpCM,IAAMC,IAAN,UAAarB,EAAb,kBAA8Bc,IACzBQ,MAAK,SAACC,GACH,EAAKC,SAAS,CACVpB,KAAMmB,EAASE,Y,+BAsBrB,IAAD,SACuBV,KAAKF,MAAMT,KAAhCE,EADF,EACEA,KAAMoB,EADR,EACQA,YAEb,OACI,gCACI,uBAAOgB,SAAU3B,KAAKkB,iBAAkBvB,KAAK,OAAO8B,MAAOlC,IAC3D,uBAAQoC,SAAU3B,KAAK0B,iBAAkB/B,KAAK,OAAO8B,MAAOd,IAC5D,wBAAQ9B,QAAS,WAAQ,EAAKf,MAAM8D,OAAO,EAAK9B,MAAMT,OAAtD,yB,GAxCON,aCFR,SAAS8C,EAAO/D,GAM3B,OAJAgE,qBAAU,WACN,OAAOhE,EAAMiE,YACd,IAGC,uBAAMtC,SAAU3B,EAAMkE,SAAtB,UACI,sBAAKvD,UAAU,aAAf,UACI,uBAAOwD,QAAQ,qBAAf,2BACA,uBAAOtC,KAAK,QAAQlB,UAAU,eAAeF,GAAG,qBAAqBgB,KAAK,QAAQ2C,mBAAiB,iBAEvG,sBAAKzD,UAAU,aAAf,UACI,uBAAOwD,QAAQ,wBAAf,sBACA,uBAAO1C,KAAK,WAAWI,KAAK,WAAWlB,UAAU,eAAeF,GAAG,6BAEvE,wBAAQoB,KAAK,SAASlB,UAAU,kBAAhC,oBAEIX,EAAMqE,aAAgB,mBAAGxD,MAAO,CAACyD,MAAO,OAAlB,SAA2BtE,EAAMqE,eAAqB,QClB7E,SAASE,EAAOvE,GAC3B,OACI,uBAAM2B,SAAU3B,EAAMwE,SAAtB,UACI,sBAAK7D,UAAU,aAAf,UACI,uBAAOwD,QAAQ,uBAAf,sBACA,uBAAOtC,KAAK,OAAOlB,UAAU,eAAeF,GAAG,uBAAuBgB,KAAK,gBAE/E,sBAAKd,UAAU,aAAf,UACI,uBAAOwD,QAAQ,qBAAf,2BACA,uBAAOtC,KAAK,QAAQlB,UAAU,eAAeF,GAAG,qBAAqBgB,KAAK,QAAQ2C,mBAAiB,cACnG,uBAAO3D,GAAG,YAAYE,UAAU,uBAAhC,+DAEJ,sBAAKA,UAAU,aAAf,UACI,uBAAOwD,QAAQ,wBAAf,sBACA,uBAAO1C,KAAK,WAAWI,KAAK,WAAWlB,UAAU,eAAeF,GAAG,6BAEvE,wBAAQoB,KAAK,SAASlB,UAAU,kBAAhC,uB,ICJN8D,E,4MAEJzC,MAAQ,CACNX,MAAO,GACPP,aAAc,KACduD,aAAc,M,EAyBhBK,UAAY,SAACrB,GACXA,EAAEsB,iBADe,MAEkBtB,EAAEK,OAA9BjC,EAFU,EAEVA,KAAMoB,EAFI,EAEJA,YACT+B,EAHa,EAES9B,MACJ+B,MAAM,GAExBC,EAAa,IAAIC,SACrBD,EAAWE,OAAO,WAAYJ,GAE9BrC,IAAM0C,KAAN,UAAc9D,EAAd,WAAgC2D,GAC/BrC,MAAK,SAACC,GAEL,IAAIwC,EAAU,CACZzD,KAAMA,EAAKkC,MACXd,YAAaA,EAAYc,MACzBwB,WAAW,EACXrC,MAAOJ,EAASE,KAAKE,OAGvBP,IAAM0C,KAAN,UAAc9D,EAAd,WAAgC+D,GAC/BzC,MAAK,SAACC,GACH,EAAKC,SAAS,CACZtB,MAAM,CAAGqB,EAASE,MAAb,mBAAuB,EAAKZ,MAAMX,UACtC,WACD,EAAKrB,MAAMoF,QAAQC,KAAK,e,EAMlCC,aAAe,SAACrD,GACdM,IAAMgD,OAAN,UAAgBpE,EAAhB,kBAAiCc,IAC9BQ,MAAK,WACF,IAAI+C,EAAgB,EAAKxD,MAAMX,MAAMoE,QAAO,SAAClE,GACzC,OAAOA,EAAKC,MAAQS,KAGxB,EAAKU,SAAS,CACZtB,MAAOmE,IACN,WACD,EAAKxF,MAAMoF,QAAQC,KAAK,Y,EAMlCK,WAAa,SAACnE,GACZgB,IAAMoD,MAAN,UAAexE,EAAf,kBAAgCI,EAAKC,KAAO,CAC1CC,KAAMF,EAAKE,KACXoB,YAAatB,EAAKsB,YAClBsC,UAAW5D,EAAK4D,YAEjB1C,MAAK,WACF,IAAImD,EAAe,EAAK5D,MAAMX,MAAMC,KAAI,SAACuE,GAIvC,OAHIA,EAAOrE,KAAOD,EAAKC,MACrBqE,EAAStE,GAEJsE,KAGT,EAAKlD,SAAS,CACZtB,MAAOuE,IACN,WACD,EAAK5F,MAAMoF,QAAQC,KAAK,Y,EAKhCS,aAAe,SAACzC,GACdA,EAAEsB,iBADkB,MAEgBtB,EAAEK,OAA/BqC,EAFa,EAEbA,SAAUC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,SAExB1D,IAAM0C,KAAN,UAAc9D,EAAd,WAAgC,CAC9B4E,SAAUA,EAASpC,MACnBqC,MAAOA,EAAMrC,MACbsC,SAAUA,EAAStC,OAClB,CAACuC,iBAAiB,IACpBzD,MAAK,SAACC,GAEL,EAAKC,SAAS,CACZ7B,aAAc4B,EAASE,OACtB,WACD,EAAK5C,MAAMoF,QAAQC,KAAK,Y,EAQ9Bc,aAAe,SAAC9C,GACdA,EAAEsB,iBADkB,MAEMtB,EAAEK,OAArBsC,EAFa,EAEbA,MAAOC,EAFM,EAENA,SAEd1D,IAAM0C,KAAN,UAAc9D,EAAd,WAAgC,CAC9B6E,MAAOA,EAAMrC,MACbsC,SAAUA,EAAStC,OAClB,CAACuC,iBAAiB,IACpBzD,MAAK,SAACC,GAEL,EAAKC,SAAS,CACZ7B,aAAc4B,EAASE,OACtB,WACD,EAAK5C,MAAMoF,QAAQC,KAAK,WAI3Be,OAAM,SAACC,GACN,EAAK1D,SAAS,CACZ0B,aAAcgC,EAAI3D,SAASE,KAAK0D,Y,EAStCC,aAAe,SAAClD,GACdd,IAAM0C,KAAN,UAAc9D,EAAd,WAAgC,GAAI,CAAC+E,iBAAiB,IACrDzD,MAAK,WACJ,EAAKE,SAAS,CACZ7B,aAAc,W,EAKtB0F,cAAgB,WAEd,EAAK7D,SAAS,CACZ0B,aAAc,Q,kEAvJK,IAAD,OACdnC,KAAKF,MAAMlB,cACfyB,IAAMC,IAAN,UAAarB,EAAb,SAA6B,CAAC+E,iBAAiB,IAC5CzD,MAAK,SAACC,GACLL,QAAQC,IAAII,EAASE,MACrB,EAAKD,SAAS,CACZ7B,aAAc4B,EAASE,UAM7BL,IAAMC,IAAN,UAAarB,EAAb,WACCsB,MAAK,SAACC,GAEL,EAAKC,SAAS,CACZtB,MAAOqB,EAASE,Y,+BA0IZ,IAAD,SAC6BV,KAAKF,MAAlClB,EADA,EACAA,aAAcuD,EADd,EACcA,aACrB,OACE,gCACE,cAAC,EAAD,CAAKvD,aAAcA,EAAcE,SAAUkB,KAAKqE,eAChD,+CAEEzF,EAAgB,2CAAcA,EAAaiF,YAAkB,KAE/D,eAAC,IAAD,WACI,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAC5B,OAAO,cAAC,EAAD,CAAUtF,MAAO,EAAKW,MAAMX,WAGrC,cAAC,IAAD,CAAOqF,KAAK,YAAYC,OAAQ,WAC9B,OAAO,cAAC,EAAD,CAAS7F,aAAcA,EAAec,MAAO,EAAK8C,eAG3D,cAAC,IAAD,CAAQ+B,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,SAACC,GAC1C,OAAO,cAAC,EAAD,aAAY9F,aAAcA,EAAcoC,SAAU,EAAKoC,cAAmBsB,OAEnF,cAAC,IAAD,CAAOF,KAAK,qBAAqBC,OAAQ,SAACC,GACxC,OAAO,cAAC,EAAD,aAAU9C,OAAQ,EAAK4B,YAAgBkB,OAE7C,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAQ,SAACC,GACnC,OAAO,cAAC7C,EAAD,aAAQE,UAAW,EAAKuC,cAAenC,aAAcA,EAAcH,SAAU,EAAKiC,cAAkBS,OAE7G,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAQ,SAACC,GAC9B,OAAO,cAACrC,EAAD,aAAQC,SAAU,EAAKsB,cAAkBc,iB,GA9L1C3F,aAsMH4F,cAAWpC,GCxMXqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvE,MAAK,YAAkD,IAA/CwE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASX,OACP,cAAC,IAAD,UACE,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.4d4b5ba7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MyNav(props) {\r\n  let buttonStyle = { marginLeft: \"10px\" };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/\">Todos</Link>\r\n          <Link style={buttonStyle} to=\"/add-form\">\r\n            Add Todo\r\n          </Link>\r\n          {props.loggedInUser ? (\r\n            <button style={buttonStyle} onClick={props.onLogout}>\r\n              Logout\r\n            </button>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <Link style={buttonStyle} to=\"/sign-in\">\r\n                Sign In\r\n              </Link>\r\n              <Link style={buttonStyle} to=\"/sign-up\">\r\n                Sign Up\r\n              </Link>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default MyNav;\r\n","import React, { Component } from 'react'\r\n\r\nclass MyChatBot extends Component {\r\n\r\n    componentDidMount(){ //use compdidmount for 3rd party APIs  for func based use use effect with }, [])\r\n        (function(d, m){\r\n            var kommunicateSettings = \r\n                {\"appId\":\"28bb853a659d31571da6ae7aa6bde2c25\",\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\r\n            var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\r\n            s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n            var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\r\n            window.kommunicate = m; m._globals = kommunicateSettings;\r\n        })(document, window.kommunicate || {});\r\n    /* NOTE : Use web server to view HTML files as real-time update will not work if you directly open the HTML file in the browser. */\r\n    }\r\n\r\n    render() {\r\n        return <div></div>\r\n    } \r\n        \r\n}\r\n\r\nexport default MyChatBot","import React from 'react'\r\nimport {MapContainer, TileLayer, Marker, Popup} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\n\r\nfunction MyMap() {\r\n    const position = [51.505, -0.09]\r\n    return (\r\n        \r\n        \r\n    \r\n\r\n  <MapContainer style={{width: \"900px\", height: \"500px\", margin: \"20px\"}} center={position} zoom={13} scrollWheelZoom={false}>\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    />\r\n    <Marker position={position}>\r\n      <Popup>\r\n        A pretty CSS3 popup. <br /> Easily customizable.\r\n      </Popup>\r\n    </Marker>\r\n  </MapContainer>\r\n)\r\n    \r\n}\r\n\r\nexport default MyMap","export const API_URL ='https://ross-todos-wdft-final.herokuapp.com/api'","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport MyChatBot from './MyChatBot'\r\nimport MyMap from './MyMap'\r\nimport {Elements} from '@stripe/react-stripe-js'\r\nimport CheckOutForm from './CheckOutForm'\r\n//import '../App.css'\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nfunction TodoList(props) {\r\n\r\n    // props.todos = [{}, {}, {}]\r\n    {/*const promise = loadStripe(\"pk_test_51Hj18mJDf1jCzZvm3MJNK9dwbCmzKN7tLSNvvuTSJXjJjBvvVvN9agCgyVM16HKHessoHAGfI2lUZLOSr1kehLfK00v4xeEd3E\");*/}\r\n\r\n    return (\r\n        \r\n\r\n\r\n// {/*<Elements stripe={promise}>\r\n//         <CheckOutForm />\r\n//       </Elements>*/\r\n\r\n\r\n\r\n        // {/*<MyChatBot /> */}\r\n        // {/*<MyMap />*/}\r\n        <div>\r\n           In todo list  \r\n           {\r\n               props.todos.map((todo) => {\r\n                    return <Link to={`/todo/${todo._id}`}>\r\n                        <p key={todo._id} >{todo.name}</p>\r\n                        </Link>\r\n               })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nfunction AddForm(props) {\r\n\r\n    if(!props.loggedInUser){\r\n        return <Redirect to={'/sign-in'} />\r\n    }\r\n\r\n    //props.onAdd = function\r\n    return (\r\n        <form onSubmit={props.onAdd} >\r\n            <input name=\"name\" type=\"text\" placeholder=\"Enter name\"></input>\r\n            <input name=\"description\"  type=\"text\" placeholder=\"Enter description\"></input>\r\n            <input type=\"file\" className=\"form-control\" name=\"image\"  />\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddForm","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {API_URL} from '../config'\r\n\r\nclass TodoDetail extends Component {\r\n  // this.props.onDelete = fnc\r\n\r\n  state = {\r\n    todo: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    let todoId = this.props.match.params.todoId;\r\n    console.log(this.props);\r\n    //    this.props.history.push('/manish.com')\r\n    axios.get(`${API_URL}/todos/${todoId}`).then((response) => {\r\n      this.setState({\r\n        todo: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, description, _id, image } = this.state.todo;\r\n    const { loggedInUser } = this.props;\r\n\r\n    if (!loggedInUser) {\r\n      return <Redirect to={\"/sign-in\"} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>Name: {name}</div>\r\n        <div>Detail: {description}</div>\r\n        <img style={{ width: \"50px\" }} src={image} alt={name} />\r\n        <Link to={`/todo/${_id}/edit`}>\r\n          <button>Edit</button>\r\n        </Link>\r\n        <button\r\n          onClick={() => {\r\n            this.props.onDelete(_id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoDetail;\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios' \r\nimport {API_URL} from '../config'\r\n\r\nclass EditForm extends Component {\r\n\r\n    state ={\r\n        todo: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n       let todoId = this.props.match.params.todoId\r\n        axios.get(`${API_URL}/todos/${todoId}`)\r\n            .then((response) => {\r\n                this.setState({\r\n                    todo: response.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n       let cloneTodo = JSON.parse(JSON.stringify(this.state.todo))\r\n       cloneTodo.name =  e.target.value\r\n       this.setState({\r\n           todo: cloneTodo\r\n       })\r\n    }\r\n\r\n    handleDescChange = (e) => {\r\n        let cloneTodo = JSON.parse(JSON.stringify(this.state.todo))\r\n        cloneTodo.description =  e.target.value\r\n        this.setState({\r\n            todo: cloneTodo\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {name, description} = this.state.todo\r\n\r\n        return (\r\n            <div>\r\n                <input onChange={this.handleNameChange} type=\"text\" value={name} ></input>\r\n                <input  onChange={this.handleDescChange} type=\"text\" value={description} ></input>\r\n                <button onClick={() => { this.props.onEdit(this.state.todo) }  } >Edit</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditForm","import React, {useEffect} from 'react';\r\n\r\nexport default function SignIn(props){\r\n\r\n    useEffect(() => {\r\n        return props.onUnMount\r\n    }, [])\r\n\r\n    return (\r\n        <form onSubmit={props.onSignIn}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            {\r\n                props.errorMessage ? (<p style={{color: \"red\"}}>{props.errorMessage}</p>) : null\r\n            }\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function SignUp(props){\r\n    return (\r\n        <form onSubmit={props.onSignUp}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputUsername\">Username</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" name=\"username\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport Nav from './components/MyNav'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport axios from 'axios'\r\nimport {Switch , Route, withRouter} from 'react-router-dom'\r\nimport TodoList from './components/TodoList'\r\nimport AddForm from './components/AddForm'\r\nimport TodoDetail from './components/TodoDetail'\r\nimport EditForm from './components/EditForm'\r\nimport SignIn from './components/SignIn'\r\nimport SignUp from './components/SignUp'\r\nimport {API_URL} from './config'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    todos: [],\r\n    loggedInUser: null,\r\n    errorMessage: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(!this.state.loggedInUser){\r\n    axios.get(`${API_URL}/user`, {withCredentials: true})\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        this.setState({\r\n          loggedInUser: response.data\r\n        })\r\n        // response.data\r\n        \r\n      })\r\n    }\r\n    axios.get(`${API_URL}/todos`)\r\n    .then((response) => {\r\n      // response.data\r\n      this.setState({\r\n        todos: response.data\r\n      })\r\n      \r\n    })\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    e.preventDefault()\r\n    const {name, description, image} = e.target\r\n    let imageFile = image.files[0]\r\n\r\n    let uploadForm = new FormData()\r\n    uploadForm.append('imageUrl', imageFile) //imageUrl looked for in server side code\r\n\r\n    axios.post(`${API_URL}/upload`, uploadForm)//upload comes from server.\r\n    .then((response) => {\r\n\r\n      let newTodo = {\r\n        name: name.value,\r\n        description: description.value,\r\n        completed: false,\r\n        image: response.data.image\r\n      }\r\n  \r\n      axios.post(`${API_URL}/create`, newTodo)\r\n      .then((response) =>{\r\n          this.setState({\r\n            todos: [ response.data , ...this.state.todos]\r\n          }, () => {\r\n            this.props.history.push('/')\r\n          })      \r\n      })\r\n    })\r\n}\r\n\r\n  handleDelete = (todoId) => {\r\n    axios.delete(`${API_URL}/todos/${todoId}`)\r\n      .then(() => {\r\n          let filteredTodos = this.state.todos.filter((todo) => {\r\n              return todo._id !== todoId\r\n          })\r\n\r\n          this.setState({\r\n            todos: filteredTodos\r\n          }, () => {\r\n            this.props.history.push('/')\r\n          })\r\n      })\r\n\r\n  }\r\n\r\n  handleEdit = (todo) => {\r\n    axios.patch(`${API_URL}/todos/${todo._id}`, {\r\n      name: todo.name,\r\n      description: todo.description,\r\n      completed: todo.completed\r\n    })\r\n    .then(() => {\r\n        let updatedTodos = this.state.todos.map((myTodo) => {\r\n          if (myTodo._id == todo._id) {\r\n            myTodo = todo\r\n          }\r\n          return myTodo\r\n        })\r\n\r\n        this.setState({\r\n          todos: updatedTodos\r\n        }, () => {\r\n          this.props.history.push('/')\r\n        })\r\n    })\r\n  }\r\n\r\n  handleSignUp = (e) => {\r\n    e.preventDefault()\r\n    const {username, email, password} = e.target\r\n//withCredentials allows to share credentials between server and browser.  Tells browser/client that there is invfo to save (i.e. cookie)\r\n    axios.post(`${API_URL}/signup`, {\r\n      username: username.value,\r\n      email: email.value, \r\n      password: password.value\r\n    }, {withCredentials: true}) \r\n    .then((response) => {\r\n\r\n      this.setState({\r\n        loggedInUser: response.data\r\n      }, ()=>{\r\n        this.props.history.push('/')\r\n      })\r\n\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  handleSignIn = (e) => {\r\n    e.preventDefault()\r\n    const {email, password} = e.target\r\n//withCredentials allows to share credentials between server and browser.  Tells browser/client that there is invfo to save (i.e. cookie)\r\n    axios.post(`${API_URL}/signin`, {\r\n      email: email.value, \r\n      password: password.value\r\n    }, {withCredentials: true}) \r\n    .then((response) => {\r\n\r\n      this.setState({\r\n        loggedInUser: response.data\r\n      }, ()=>{\r\n        this.props.history.push('/')\r\n      })\r\n\r\n    })\r\n    .catch((err) => {\r\n      this.setState({\r\n        errorMessage: err.response.data.error\r\n      })\r\n     \r\n    })\r\n    \r\n  }\r\n    \r\n  \r\n\r\n  handleLogOut = (e) => {\r\n    axios.post(`${API_URL}/logout`, {}, {withCredentials: true})\r\n    .then(() => {\r\n      this.setState({\r\n        loggedInUser: null\r\n      })\r\n    })\r\n  }\r\n\r\nhandleUnMount = () => {\r\n  //console.log('gets unmount')\r\n  this.setState({\r\n    errorMessage: null\r\n  })\r\n}\r\n  render() {\r\n    const {loggedInUser, errorMessage} =this.state\r\n    return (\r\n      <div>   \r\n        <Nav loggedInUser={loggedInUser} onLogout={this.handleLogOut} />\r\n        <h3>Shopping List</h3>\r\n        {\r\n          loggedInUser ? (<h5>User is: {loggedInUser.username}</h5>) : null\r\n        }\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => {\r\n              return <TodoList todos={this.state.todos} />\r\n            }} />\r\n            {/* <Route path=\"/\" component={AddForm} /> */}\r\n            <Route path=\"/add-form\" render={() => {\r\n              return <AddForm loggedInUser={loggedInUser}  onAdd={this.handleAdd} />\r\n            }} />\r\n            {/* <Route path=\"/todo/:todoId\" component={TodoDetail}/> */}\r\n            <Route  exact path=\"/todo/:todoId\" render={(routeProps) => {\r\n              return <TodoDetail loggedInUser={loggedInUser} onDelete={this.handleDelete}  {...routeProps} />\r\n            }} />\r\n            <Route path=\"/todo/:todoId/edit\" render={(routeProps) => {\r\n              return <EditForm onEdit={this.handleEdit} {...routeProps} />\r\n            }} />\r\n               <Route path=\"/sign-in\" render={(routeProps) => {\r\n            return <SignIn onUnMount={this.handleUnMount} errorMessage={errorMessage} onSignIn={this.handleSignIn} {...routeProps} />\r\n          }}/>\r\n          <Route path=\"/sign-up\" render={(routeProps) => {\r\n            return <SignUp onSignUp={this.handleSignUp} {...routeProps} />\r\n          }}/>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(App)","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}